{"version":3,"sources":["Joke.js","JokesBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","handleNetScoreDecrease","evt","preventDefault","props","netScoreVote","id","handleNetScoreIncrease","this","netScore","className","onClick","style","borderColor","getColor","joke","getEmoji","aria-label","Component","JokesBoard","getNewJokes","a","console","log","randomJokesURL","options","newRandomJokes","length","numJokesToFetch","axios","get","newRandomJokesObj","newRandomJokesResults","data","seenJokes","has","push","key","uuidv4","setState","st","loading","randomJokes","window","localStorage","setItem","JSON","stringify","state","alert","handleClickForNewJokes","sortJokes","arr","sortedJokes","sort","b","handleClickforSorting","sorted","delta","map","j","parse","getItem","Set","jokeObject","jokes","src","alt","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2535dcef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Joke.css';\r\n\r\nclass Joke extends Component {\r\n\r\n    getColor() {\r\n        if (this.props.netScore >= 15) {\r\n            return \"#4CAF50\";\r\n        } else if (this.props.netScore >= 12) {\r\n            return \"#8BC34A\";\r\n        } else if (this.props.netScore >= 9) {\r\n            return \"#CDDC39\";\r\n        } else if (this.props.netScore >= 6) {\r\n            return \"#FFEB3B\";\r\n        } else if (this.props.netScore >= 3) {\r\n            return \"#FFC107\";\r\n        } else if (this.props.netScore >= 0) {\r\n            return \"#FF9800\";\r\n        } else {\r\n            return \"#f44336\";\r\n        }\r\n    }\r\n    getEmoji() {\r\n        if (this.props.netScore >= 15) {\r\n            return \"em em-rolling_on_the_floor_laughing\";\r\n        } else if (this.props.netScore >= 12) {\r\n            return \"em em-laughing\";\r\n        } else if (this.props.netScore >= 9) {\r\n            return \"em em-smiley\";\r\n        } else if (this.props.netScore >= 6) {\r\n            return \"em em-slightly_smiling_face\";\r\n        } else if (this.props.netScore >= 3) {\r\n            return \"em em-neutral_face\";\r\n        } else if (this.props.netScore >= 0) {\r\n            return \"em em-confused\";\r\n        } else {\r\n            return \"em em-angry\";\r\n        }\r\n    }\r\n\r\n    // handle decrease of netscore\r\n    handleNetScoreDecrease = (evt) => {\r\n        evt.preventDefault();\r\n        this.props.netScoreVote(this.props.id, -1)\r\n    };\r\n\r\n    // handle decrease of netscore\r\n    handleNetScoreIncrease = (evt) => {\r\n        evt.preventDefault();\r\n        // console.log(this.props.id, this.state.netScore)\r\n        this.props.netScoreVote(this.props.id, +1)\r\n    };\r\n\r\n\r\n    // Render a single joke - Joke text, buttons for up and down voting, netScore, smiley rating\r\n    render() {\r\n\r\n        return (\r\n            <div className='Joke'>\r\n                <div className='Joke-buttons'>\r\n                    <i className='fas fa-arrow-up' onClick={this.handleNetScoreIncrease} />\r\n                    <span className='Joke-netScore' style={{ borderColor: this.getColor() }}>\r\n                        {this.props.netScore}\r\n                    </span>\r\n                    <i className='fas fa-arrow-down' onClick={this.handleNetScoreDecrease} />\r\n                </div>\r\n                <div className='Joke-text'>{this.props.joke}</div>\r\n                {/* <div className='Joke-smiley'>\r\n                      <i className={this.getEmoji()} />\r\n                    </div> */}\r\n                <div className='Joke-smiley'>\r\n                    <i className={this.getEmoji()} aria-label=\"ROLLING ON THE FLOOR LAUGHING\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Joke;\r\n\r\n","import React, { Component } from 'react';\r\nimport Joke from './Joke';\r\nimport './JokesBoard.css';\r\nimport axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// import uuid from \"uuid/v4\";\r\n\r\n// const proxyUrl = \"https://ancient-crag-49665.herokuapp.com/\" // To handle Cors errors\r\nclass JokesBoard extends Component {\r\n    static defaultProps = {\r\n        numJokesToFetch: 10,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randomJokes: JSON.parse(window.localStorage.getItem('jokes') || '[]'),\r\n            loading: false,\r\n            sorted: false,\r\n        }\r\n\r\n        /* Array to store all jokes in a set to later compare\r\n         with newly-fetched jokes and remove duplicates - refresh page to see the accurate number of jokes in \r\n         the seenJokes set*/\r\n        this.seenJokes = new Set(this.state.randomJokes.map(jokeObject => jokeObject.joke))\r\n\r\n        console.log(this.seenJokes);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('in Component did render');\r\n        if (this.state.randomJokes.length === 0) {\r\n            this.setState({ loading: true }, this.getNewJokes)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getNewJokes = async () => {\r\n        try {\r\n            console.log('get newJokes was called');\r\n            const randomJokesURL = `https://icanhazdadjoke.com/`;\r\n            const options = {\r\n                'User-Agent': 'My Library (https://github.com/criscrispy/)', // add repo later\r\n                'method': \"GET\",\r\n                'headers': { 'Accept': 'application/json' },\r\n                // 'crossorigin': \"\"\r\n            }\r\n\r\n            let newRandomJokes = [];\r\n            while (newRandomJokes.length < this.props.numJokesToFetch) {\r\n                // const newRandomJokesObj = await axios.get(proxyUrl + randomJokesURL, options);\r\n                const newRandomJokesObj = await axios.get(randomJokesURL, options);\r\n                const newRandomJokesResults = newRandomJokesObj.data;\r\n\r\n                if (!this.seenJokes.has(newRandomJokesResults.joke)) {\r\n                    newRandomJokes.push({ ...newRandomJokesResults, netScore: 0, key: uuidv4() })\r\n                }\r\n                else {\r\n                    console.log('Found a duplicate', newRandomJokesResults.joke)\r\n                }\r\n\r\n            }\r\n\r\n            this.setState(st =>\r\n            ({\r\n                loading: false,\r\n                randomJokes: [...st.randomJokes, ...newRandomJokes,]\r\n            }),\r\n                () => window.localStorage.setItem('jokes', JSON.stringify(this.state.randomJokes))\r\n            );\r\n\r\n        } catch (error) {\r\n            // NEEDS IMPROVEMENT\r\n            /* In case there is a timeout, etc, \r\n            when u fetch new jokes we will just \r\n            alert the error and loading animation will be triggered, \r\n            the jokes that are already there will be shown.*/\r\n            alert(error)\r\n            this.setState({ loading: false })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    // Button for obtaining new jokes\r\n    handleClickForNewJokes = () => {\r\n        this.setState({ loading: true }, this.getNewJokes)\r\n    }\r\n\r\n    // sorting jokes from higest to lowest rating\r\n    sortJokes = (arr) => {\r\n        console.log(arr)\r\n        const sortedJokes = arr.sort((a, b) => b.netScore - a.netScore);\r\n        this.setState({ randomJokes: sortedJokes });\r\n    }\r\n\r\n    handleClickforSorting = (evt) => {\r\n        evt.preventDefault();\r\n        this.setState({ sorted: true }, this.sortJokes(this.state.randomJokes))\r\n\r\n    }\r\n\r\n\r\n\r\n    netScoreVote = (id, delta) => {\r\n        // const updateRandomJokes = this.state.randomJokes.map(randomJoke => {\r\n        //     if (randomJoke.id === id) {\r\n        //         return { ...randomJoke, netScore: randomJoke.netScore + delta }\r\n        //     }\r\n        //     else { return randomJoke }\r\n        // })\r\n        // this.setState({\r\n        //     randomJokes: updateRandomJokes,\r\n        // });\r\n\r\n        this.setState(\r\n            st => ({\r\n                randomJokes: st.randomJokes.map(j =>\r\n                    j.id === id ? { ...j, netScore: j.netScore + delta } : j\r\n                )\r\n            }),\r\n            () =>\r\n                window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.randomJokes))\r\n        );\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log('in render')\r\n        const jokes = this.state.randomJokes.map((jokeObject) => {\r\n            return <Joke\r\n                id={jokeObject.id}\r\n                key={jokeObject.key}\r\n                joke={jokeObject.joke}\r\n                netScore={jokeObject.netScore}\r\n                netScoreVote={this.netScoreVote}\r\n            // decreaseNetScore={this.decreaseNetScore}\r\n            />\r\n        })\r\n\r\n        return (\r\n            <div className='JokesBoard'>\r\n                <div className='JokesBoard-sidebar'>\r\n                    <h1 className='JokesBoard-title'>\r\n                        <span>Dad</span> Jokes\r\n                    </h1>\r\n                    <img src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg' alt='side-bar-laugh-icon' />\r\n                    <button className='JokesBoard-getmore' onClick={this.handleClickForNewJokes}>\r\n                        Fetch Jokes\r\n                    </button>\r\n                    <div>\r\n                        <button className='JokesBoard-sort' onClick={this.handleClickforSorting}>Sort jokes <i className='fas fa-sort-amount-down' /> </button>\r\n                    </div>\r\n                </div>\r\n                <div className='JokesBoard-main-content' >\r\n                    {this.state.loading ?\r\n                        <div className='JokesBoard-spinner'>\r\n                            <i className='far fa-8x fa-laugh fa-spin' />\r\n                        </div>\r\n                        :\r\n                        <div className='JokesBoard-jokes'>\r\n                            {jokes}\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default JokesBoard;\r\n\r\n\r\n","import './App.css';\nimport JokesBoard from './JokesBoard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokesBoard />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}